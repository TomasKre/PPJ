/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Cities;
import io.swagger.model.City;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-27T22:30:01.988Z")

@Validated
@Api(value = "city", description = "the city API")
@RequestMapping(value = "")
public interface CityApi {

    @ApiOperation(value = "", nickname = "deleteCity", notes = "", response = City.class, tags={ "city", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No content", response = City.class) })
    @RequestMapping(value = "/city/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<City> deleteCity(@ApiParam(value = "",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "getCities", notes = "", response = Cities.class, tags={ "city", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Cities.class) })
    @RequestMapping(value = "/city",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Cities> getCities();


    @ApiOperation(value = "", nickname = "getCity", notes = "", response = City.class, tags={ "city", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = City.class) })
    @RequestMapping(value = "/city/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<City> getCity(@ApiParam(value = "",required=true) @PathVariable("id") Integer id);


    @ApiOperation(value = "", nickname = "postCity", notes = "", response = City.class, tags={ "city", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = City.class) })
    @RequestMapping(value = "/city",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<City> postCity(@ApiParam(value = "" ,required=true )  @Valid @RequestBody City body);


    @ApiOperation(value = "", nickname = "updateCity", notes = "", response = City.class, tags={ "city", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = City.class) })
    @RequestMapping(value = "/city/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<City> updateCity(@ApiParam(value = "",required=true) @PathVariable("id") String id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody City body);

}
