swagger: "2.0"
info:
  description: "PPJ semestrální projekt"
  version: "1.0.0"
  title: "PPJ"
host: "localhost"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /weather/{id}:
    get:
      tags:
      - "weather"
      operationId: "getWeather"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Weather"
  /city:
    get:
      tags:
      - "city"
      operationId: "getCities"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cities"
    post:
      tags:
      - "city"
      operationId: "postCity"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/City"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/City"  
  /city/{id}:
    get:
      tags:
      - "city"
      operationId: "getCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/City"
    put:
      tags:
      - "city"
      operationId: "updateCity"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/City"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/City"
    delete:
      tags:
      - "city"
      operationId: "deleteCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "204":
          description: "No content"
          schema:
            $ref: "#/definitions/City"
  /country:
    get:
      tags:
      - "country"
      operationId: "getCountries"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Countries"
    post:
      tags:
      - "country"
      operationId: "postCountry"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Country"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/Country"  
  /country/{id}:
    get:
      tags:
      - "country"
      operationId: "getCountry"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Country"
    put:
      tags:
      - "country"
      operationId: "updateCountry"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Country"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Country"
    delete:
      tags:
      - "country"
      operationId: "deleteCountry"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "204":
          description: "No content"
          schema:
            $ref: "#/definitions/Country"
definitions:
  Cities:
    type: "array"
    items:
      $ref: "#/definitions/City"
  City:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      country:
        type: "string"
      lon:
        type: "number"
        format: "float"
      lat:
        type: "number"
        format: "float"
  Countries:
    type: "array"
    items:
      $ref: "#/definitions/Country"
  Country:
    type: "object"
    properties:
      country:
        type: "string"
      country_long:
        type: "string"  
      name:
        type: "string"
  Weather:
    type: "object"
    properties:
      forecast:
        type: "array"
        items:
          $ref: "#/definitions/Forecast"
      city:
        $ref: "#/definitions/City"
  Forecast:
    type: "object"
    properties:
      dt:
        type: "integer"
        format: "int32"
      dt_txt:
        type: "string"
      temp:
        type: "number"
        format: "float"
      feels_like:
        type: "number"
        format: "float"
      temp_min:
        type: "number"
        format: "float"
      temp_max:
        type: "number"
        format: "float"
      pressure:
        type: "integer"
        format: "int32"
      sea_level:
        type: "integer"
        format: "int32"
      grnd_level:
        type: "integer"
        format: "int32"
      humidity:
        type: "integer"
        format: "int32"
      wind:
        $ref: "#/definitions/Wind"
      visibility:
        type: "integer"
        format: "int32"
  Wind:
    type: "object"
    properties:
      speed:
        type: "number"
        format: "float"
      deg:
        type: "integer"
        format: "int32"
      gust:
        type: "number"
        format: "float"
    